rules_version = '2';

// Firestore Rules
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection: each user may create/read/update/delete only their own doc
    match /users/{userId} {
      allow create: if request.auth != null
                    && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null
                                  && request.auth.uid == userId;
    }

    // Each user's transactions sub-collection
    match /users/{userId}/transactions/{txId} {
      allow create: if request.auth != null
                    && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null
                                  && request.auth.uid == userId;
    }

    // Topâ€‘level goals collection
    // Only the authenticated owner can create/read/update/delete their own goals
    match /goals/{goalId} {
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
      allow read:   if request.auth != null
                    && resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null
                            && resource.data.userId == request.auth.uid;
    }

    // Deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Storage Rules
service firebase.storage {
  match /b/{bucket}/o {
    // Allow users to read any profile photo
    match /users/{userId}/profile.jpg {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny access to all other files
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 